name: Scrape Movie Showtimes (TMDB/Letterboxd Focused)

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    # Runs every day at 00:05 UTC (09:05 JST next day)
    - cron: '5 0 * * *'

jobs:
  scrape_and_commit:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # This single action replaces the complex manual Chrome and ChromeDriver installation
      - name: Set up Chrome for Selenium
        uses: browser-actions/setup-chrome@v1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade google-generativeai
          pip install -r requirements.txt

      # This step installs the browser and system dependencies for Playwright
      - name: Install Playwright Browsers
        run: playwright install --with-deps chromium

      - name: Cache TMDB data
        uses: actions/cache@v4
        with:
          path: tmdb_cache.json
          key: ${{ runner.os }}-tmdb-cache-${{ hashFiles('**/main_scraper.py') }}
          restore-keys: |
            ${{ runner.os }}-tmdb-cache-

      - name: Run scraper script
        run: python main_scraper.py
        env:
          # IMPORTANT: Your TMDB_API_KEY and GEMINI_API_KEY must be configured as secrets
          # in your repository's Settings > Secrets and variables > Actions
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Commit and push generated files
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Stage the generated files
          git add showtimes.json 
          git add tmdb_cache.json 

          # Check if there are any staged changes
          if git diff --staged --quiet; then
            echo "No changes to commit."
            exit 0 # Exit successfully if no changes to commit
          fi

          # Commit the staged changes locally
          git commit -m "Automated update of showtimes and cache files"
          
          # Pull latest changes from the remote before pushing
          git pull origin main --rebase
          
          # Push the rebased commit to the remote repository
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
